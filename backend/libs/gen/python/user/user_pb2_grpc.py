# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from user import user_pb2 as user_dot_user__pb2


class UserServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Register = channel.unary_unary(
        '/user.UserService/Register',
        request_serializer=user_dot_user__pb2.Creditionals.SerializeToString,
        response_deserializer=user_dot_user__pb2.Token.FromString,
        )
    self.Login = channel.unary_unary(
        '/user.UserService/Login',
        request_serializer=user_dot_user__pb2.Creditionals.SerializeToString,
        response_deserializer=user_dot_user__pb2.Token.FromString,
        )
    self.GetUser = channel.unary_unary(
        '/user.UserService/GetUser',
        request_serializer=user_dot_user__pb2.Id.SerializeToString,
        response_deserializer=user_dot_user__pb2.User.FromString,
        )
    self.GetUserByToken = channel.unary_unary(
        '/user.UserService/GetUserByToken',
        request_serializer=user_dot_user__pb2.Token.SerializeToString,
        response_deserializer=user_dot_user__pb2.User.FromString,
        )
    self.GetFilteredGroups = channel.unary_stream(
        '/user.UserService/GetFilteredGroups',
        request_serializer=user_dot_user__pb2.FilterRequest.SerializeToString,
        response_deserializer=user_dot_user__pb2.User.FromString,
        )
    self.GetGroupById = channel.unary_unary(
        '/user.UserService/GetGroupById',
        request_serializer=user_dot_user__pb2.Id.SerializeToString,
        response_deserializer=user_dot_user__pb2.Group.FromString,
        )


class UserServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Register(self, request, context):
    """returns token
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Login(self, request, context):
    """returns token
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetUserByToken(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFilteredGroups(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetGroupById(self, request, context):
    """TODO add admin managing of groups
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Register': grpc.unary_unary_rpc_method_handler(
          servicer.Register,
          request_deserializer=user_dot_user__pb2.Creditionals.FromString,
          response_serializer=user_dot_user__pb2.Token.SerializeToString,
      ),
      'Login': grpc.unary_unary_rpc_method_handler(
          servicer.Login,
          request_deserializer=user_dot_user__pb2.Creditionals.FromString,
          response_serializer=user_dot_user__pb2.Token.SerializeToString,
      ),
      'GetUser': grpc.unary_unary_rpc_method_handler(
          servicer.GetUser,
          request_deserializer=user_dot_user__pb2.Id.FromString,
          response_serializer=user_dot_user__pb2.User.SerializeToString,
      ),
      'GetUserByToken': grpc.unary_unary_rpc_method_handler(
          servicer.GetUserByToken,
          request_deserializer=user_dot_user__pb2.Token.FromString,
          response_serializer=user_dot_user__pb2.User.SerializeToString,
      ),
      'GetFilteredGroups': grpc.unary_stream_rpc_method_handler(
          servicer.GetFilteredGroups,
          request_deserializer=user_dot_user__pb2.FilterRequest.FromString,
          response_serializer=user_dot_user__pb2.User.SerializeToString,
      ),
      'GetGroupById': grpc.unary_unary_rpc_method_handler(
          servicer.GetGroupById,
          request_deserializer=user_dot_user__pb2.Id.FromString,
          response_serializer=user_dot_user__pb2.Group.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'user.UserService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
